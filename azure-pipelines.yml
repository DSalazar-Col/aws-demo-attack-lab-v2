trigger:
  - main
  
pool:
    vmImage: ubuntu-latest
  
variables:
  - group: aws-demo-attack-lab-v2
  
stages:
    - stage: IaC_Validation
      displayName: Validacion de IaC
      jobs:
        - job: IaC_Validation
          displayName:  Validacion de IaC
          steps:
          - task: TerraformTaskV4@4
            displayName: Terraform Init
            inputs:
              provider: 'aws'
              command: 'init'
              backendServiceAWS: '$(backendServiceAWS)'
              backendAWSBucketName: '$(backendAWSBucketName)'
              backendAWSKey: '$(Build.Repository.Name)'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
          - task: TerraformTaskV4@4
            displayName: Terraform Validate
            inputs:
              provider: 'aws'
              command: 'validate'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
          - task: TerraformTaskV4@4
            displayName: Terraform Plan
            inputs:
              provider: 'aws'
              command: 'plan'
              environmentServiceNameAWS: '$(backendServiceAWS)'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra'
    - stage: Security_Gate
      displayName: Escaneo de IaC
      jobs:
        - job: Security_Gate
          displayName:  Escaneo de IaC
          steps:
          - task: UsePythonVersion@0
            displayName: Instalacion Python
            inputs:
              versionSpec: '3.8'
          - script: pip install checkov
            displayName: Instalacion Checkov
          - script: |
              checkov --prisma-api-url $(PRISMA_CONSOLE) --bc-api-key $(PRISMA_TOKEN) -d . --repo-id $(System.TeamProject)/$(Build.Repository.Name) --branch $(Build.SourceBranchName) --use-enforcement-rules
            displayName: Escaneo con Checkov